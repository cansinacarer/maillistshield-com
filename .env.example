# Application Details
APP_NAME=Mail List Shield
APP_ROOT_URL=https://localhost:5000
TIMEZONE=US/Eastern
FLASK_DEBUG=True

# Database
# DATABASE_CONNECTION_STRING=postgresql://user:pw@server:port/database
DATABASE_SECRET_KEY=

# Object Storage
S3_BUCKET_NAME=
S3_ENDPOINT=https://s3.us-east-1.amazonaws.com/ # For AWS S3
S3_KEY=
S3_SECRET=

# Email
MAIL_FROM=
MAIL_SERVER=
MAIL_PORT=465
MAIL_USE_TLS=False
MAIL_USE_SSL=True
MAIL_USERNAME=
MAIL_PASSWORD=
MAIL_DEBUG=

# OAuth
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=

# Google reCAPTCHA v2
RECAPTCHA_SITE_KEY=
RECAPTCHA_SECRET_KEY=

# Stripe
# Safe to expose in the frontend:
STRIPE_PUBLISHABLE_KEY=
# For accessing stripe from the backend:
STRIPE_SECRET_KEY=
# Use for validating stripe webhooks actually come from Stripe:
# You obtain this with the command stripe listen -e payment_intent.created,customer.created,payment_intent.succeeded,checkout.session.completed,payment_intent.payment_failed --forward-to https://localhost:5000/app/billing/webhook
STRIPE_WEBHOOK_SECRET=
# This is the product ID for the product that is configured to sell credits
STRIPE_PRODUCT_ID_FOR_CREDITS=
# Unit cost of the product that is configured to sell credits (in cents)
STRIPE_CREDIT_UNIT_COST=

# Self signed certificates for local development - only used when FLASK_DEBUG is True
FLASK_RUN_CERT=.devcontainer/ssl/cert.pem
FLASK_RUN_KEY=.devcontainer/ssl/key.pem

MLS_WORKERS=
MLS_WORKER_API_KEY=
MLS_FREE_CREDITS_FOR_NEW_ACCOUNTS=